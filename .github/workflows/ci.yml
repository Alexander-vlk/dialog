name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SECRET_KEY: test
  DEBUG: 'True'
  ALLOWED_HOSTS: '*'
  LANGUAGE_CODE: ru
  TIME_ZONE: Europe/Moscow
  POSTGRES_DB: dialog
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: 1234
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  AUTH_COOKIE_SECURE: 'False'
  PYTHONPATH: ${{ github.workspace }}

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: dialog
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
        ports: [ 5432:5432 ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --no-interaction --no-ansi

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Run migrate from scratch
        run: |
          python ./dialog_backend/manage.py migrate --noinput

      - name: Check for missing migrations
        run: |
          python ./dialog_backend/manage.py makemigrations --check --dry-run

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --no-interaction --no-ansi

      - name: Run Ruff for linting
        run: |
          poetry run ruff check .

      - name: Run Mypy for type checking
        run: |
          poetry run mypy --ignore-missing-imports .

  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: dialog
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --no-interaction --no-ansi

      - name: Run tests
        run: |
          pytest --nomigrations
