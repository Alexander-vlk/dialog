services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run python3 manage.py runserver 0.0.0.0:8040
    volumes:
      - ./:/homme/django/dialog_backend
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql@14/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=dialog

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    env_file:
      - ./dialog_backend/dialog_backend/.env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A dialog_backend worker --loglevel=info
    volumes:
      - ./dialog_backend:/app
    env_file:
      - ./dialog_backend/dialog_backend/.env
    depends_on:
      - db
      - rabbitmq

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A dialog_backend beat --loglevel=info
    volumes:
      - ./dialog_backend:/app
    env_file:
      - ./dialog_backend/dialog_backend/.env
    depends_on:
      - db
      - rabbitmq

  flower:
    image: mher/flower
    environment:
        - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//
        - FLOWER_PORT=5555
    ports:
        - 5555:5555
    depends_on:
        - rabbitmq


volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
